// Auto-generated global types.
declare global {
  // Re-exports from NetscriptDefinitions.d.ts
  type HP = import("./NetscriptDefinitions.d").HP;
  type Skills = import("./NetscriptDefinitions.d").Skills;
  type CodingContractData = import("./NetscriptDefinitions.d").CodingContractData;
  type ScriptArg = import("./NetscriptDefinitions.d").ScriptArg;
  type FilenameOrPID = import("./NetscriptDefinitions.d").FilenameOrPID;
  type Person = import("./NetscriptDefinitions.d").Person;
  type Player = import("./NetscriptDefinitions.d").Player;
  type SleevePerson = import("./NetscriptDefinitions.d").SleevePerson;
  type ResetInfo = import("./NetscriptDefinitions.d").ResetInfo;
  type MoneySource = import("./NetscriptDefinitions.d").MoneySource;
  type MoneySources = import("./NetscriptDefinitions.d").MoneySources;
  type Multipliers = import("./NetscriptDefinitions.d").Multipliers;
  type TailProperties = import("./NetscriptDefinitions.d").TailProperties;
  type ReactNode = import("./NetscriptDefinitions.d").ReactNode;
  type ReactElement = import("./NetscriptDefinitions.d").ReactElement;
  type RunningScript = import("./NetscriptDefinitions.d").RunningScript;
  type RunOptions = import("./NetscriptDefinitions.d").RunOptions;
  type SpawnOptions = import("./NetscriptDefinitions.d").SpawnOptions;
  type RecentScript = import("./NetscriptDefinitions.d").RecentScript;
  type CrimeStats = import("./NetscriptDefinitions.d").CrimeStats;
  type BasicHGWOptions = import("./NetscriptDefinitions.d").BasicHGWOptions;
  type AugmentPair = import("./NetscriptDefinitions.d").AugmentPair;
  const PositionType: typeof import("./NetscriptDefinitions.d").PositionType;
  type PositionType = import("./NetscriptDefinitions.d").PositionType;
  const OrderType: typeof import("./NetscriptDefinitions.d").OrderType;
  type OrderType = import("./NetscriptDefinitions.d").OrderType;
  type StockOrderObject = import("./NetscriptDefinitions.d").StockOrderObject;
  type StockOrder = import("./NetscriptDefinitions.d").StockOrder;
  type StockMarketConstants = import("./NetscriptDefinitions.d").StockMarketConstants;
  type ProcessInfo = import("./NetscriptDefinitions.d").ProcessInfo;
  type HackingMultipliers = import("./NetscriptDefinitions.d").HackingMultipliers;
  type HacknetMultipliers = import("./NetscriptDefinitions.d").HacknetMultipliers;
  type HacknetNodeConstants = import("./NetscriptDefinitions.d").HacknetNodeConstants;
  type HacknetServerConstants = import("./NetscriptDefinitions.d").HacknetServerConstants;
  type Server = import("./NetscriptDefinitions.d").Server;
  type BitNodeMultipliers = import("./NetscriptDefinitions.d").BitNodeMultipliers;
  type NodeStats = import("./NetscriptDefinitions.d").NodeStats;
  type SourceFileLvl = import("./NetscriptDefinitions.d").SourceFileLvl;
  type BladeburnerCurAction = import("./NetscriptDefinitions.d").BladeburnerCurAction;
  type GangGenInfo = import("./NetscriptDefinitions.d").GangGenInfo;
  type GangOtherInfoObject = import("./NetscriptDefinitions.d").GangOtherInfoObject;
  type GangOtherInfo = import("./NetscriptDefinitions.d").GangOtherInfo;
  type GangTaskStats = import("./NetscriptDefinitions.d").GangTaskStats;
  type EquipmentStats = import("./NetscriptDefinitions.d").EquipmentStats;
  type GangTerritory = import("./NetscriptDefinitions.d").GangTerritory;
  type GangMemberInfo = import("./NetscriptDefinitions.d").GangMemberInfo;
  type GangMemberInstall = import("./NetscriptDefinitions.d").GangMemberInstall;
  type GangMemberAscension = import("./NetscriptDefinitions.d").GangMemberAscension;
  type SleeveBladeburnerTask = import("./NetscriptDefinitions.d").SleeveBladeburnerTask;
  type SleeveClassTask = import("./NetscriptDefinitions.d").SleeveClassTask;
  type SleeveCompanyTask = import("./NetscriptDefinitions.d").SleeveCompanyTask;
  type SleeveCrimeTask = import("./NetscriptDefinitions.d").SleeveCrimeTask;
  type SleeveFactionTask = import("./NetscriptDefinitions.d").SleeveFactionTask;
  type SleeveInfiltrateTask = import("./NetscriptDefinitions.d").SleeveInfiltrateTask;
  type SleeveRecoveryTask = import("./NetscriptDefinitions.d").SleeveRecoveryTask;
  type SleeveSupportTask = import("./NetscriptDefinitions.d").SleeveSupportTask;
  type SleeveSynchroTask = import("./NetscriptDefinitions.d").SleeveSynchroTask;
  type SleeveTask = import("./NetscriptDefinitions.d").SleeveTask;
  type NetscriptPort = import("./NetscriptDefinitions.d").NetscriptPort;
  type TIX = import("./NetscriptDefinitions.d").TIX;
  type BaseTask = import("./NetscriptDefinitions.d").BaseTask;
  type StudyTask = import("./NetscriptDefinitions.d").StudyTask;
  type CompanyWorkTask = import("./NetscriptDefinitions.d").CompanyWorkTask;
  type CreateProgramWorkTask = import("./NetscriptDefinitions.d").CreateProgramWorkTask;
  type CrimeTask = import("./NetscriptDefinitions.d").CrimeTask;
  type FactionWorkTask = import("./NetscriptDefinitions.d").FactionWorkTask;
  type GraftingTask = import("./NetscriptDefinitions.d").GraftingTask;
  type Task = import("./NetscriptDefinitions.d").Task;
  type BitNodeOptions = import("./NetscriptDefinitions.d").BitNodeOptions;
  type BitNodeBooleanOptions = import("./NetscriptDefinitions.d").BitNodeBooleanOptions;
  type Singularity = import("./NetscriptDefinitions.d").Singularity;
  type CompanyPositionInfo = import("./NetscriptDefinitions.d").CompanyPositionInfo;
  type Hacknet = import("./NetscriptDefinitions.d").Hacknet;
  const BladeburnerActionType: typeof import("./NetscriptDefinitions.d").BladeburnerActionType;
  type BladeburnerActionType = import("./NetscriptDefinitions.d").BladeburnerActionType;
  const BladeburnerGeneralActionName: typeof import("./NetscriptDefinitions.d").BladeburnerGeneralActionName;
  type BladeburnerGeneralActionName = import("./NetscriptDefinitions.d").BladeburnerGeneralActionName;
  const BladeburnerContractName: typeof import("./NetscriptDefinitions.d").BladeburnerContractName;
  type BladeburnerContractName = import("./NetscriptDefinitions.d").BladeburnerContractName;
  const BladeburnerOperationName: typeof import("./NetscriptDefinitions.d").BladeburnerOperationName;
  type BladeburnerOperationName = import("./NetscriptDefinitions.d").BladeburnerOperationName;
  const BladeburnerBlackOpName: typeof import("./NetscriptDefinitions.d").BladeburnerBlackOpName;
  type BladeburnerBlackOpName = import("./NetscriptDefinitions.d").BladeburnerBlackOpName;
  const BladeburnerSkillName: typeof import("./NetscriptDefinitions.d").BladeburnerSkillName;
  type BladeburnerSkillName = import("./NetscriptDefinitions.d").BladeburnerSkillName;
  type BladeburnerActionName = import("./NetscriptDefinitions.d").BladeburnerActionName;
  const SpecialBladeburnerActionTypeForSleeve: typeof import("./NetscriptDefinitions.d").SpecialBladeburnerActionTypeForSleeve;
  type SpecialBladeburnerActionTypeForSleeve = import("./NetscriptDefinitions.d").SpecialBladeburnerActionTypeForSleeve;
  type BladeburnerActionTypeForSleeve = import("./NetscriptDefinitions.d").BladeburnerActionTypeForSleeve;
  type Bladeburner = import("./NetscriptDefinitions.d").Bladeburner;
  type CodingContract = import("./NetscriptDefinitions.d").CodingContract;
  type Gang = import("./NetscriptDefinitions.d").Gang;
  type GoOpponent = import("./NetscriptDefinitions.d").GoOpponent;
  type SimpleOpponentStats = import("./NetscriptDefinitions.d").SimpleOpponentStats;
  type GoAnalysis = import("./NetscriptDefinitions.d").GoAnalysis;
  type GoCheat = import("./NetscriptDefinitions.d").GoCheat;
  type Go = import("./NetscriptDefinitions.d").Go;
  type Sleeve = import("./NetscriptDefinitions.d").Sleeve;
  type Grafting = import("./NetscriptDefinitions.d").Grafting;
  type SkillsFormulas = import("./NetscriptDefinitions.d").SkillsFormulas;
  type WorkStats = import("./NetscriptDefinitions.d").WorkStats;
  type WorkFormulas = import("./NetscriptDefinitions.d").WorkFormulas;
  type ReputationFormulas = import("./NetscriptDefinitions.d").ReputationFormulas;
  type HackingFormulas = import("./NetscriptDefinitions.d").HackingFormulas;
  type HacknetNodesFormulas = import("./NetscriptDefinitions.d").HacknetNodesFormulas;
  type HacknetServersFormulas = import("./NetscriptDefinitions.d").HacknetServersFormulas;
  type GangFormulas = import("./NetscriptDefinitions.d").GangFormulas;
  type BladeburnerFormulas = import("./NetscriptDefinitions.d").BladeburnerFormulas;
  type Formulas = import("./NetscriptDefinitions.d").Formulas;
  type Fragment = import("./NetscriptDefinitions.d").Fragment;
  type ActiveFragment = import("./NetscriptDefinitions.d").ActiveFragment;
  type Stanek = import("./NetscriptDefinitions.d").Stanek;
  type InfiltrationReward = import("./NetscriptDefinitions.d").InfiltrationReward;
  type ILocation = import("./NetscriptDefinitions.d").ILocation;
  type InfiltrationLocation = import("./NetscriptDefinitions.d").InfiltrationLocation;
  type Infiltration = import("./NetscriptDefinitions.d").Infiltration;
  type UserInterface = import("./NetscriptDefinitions.d").UserInterface;
  type NS = import("./NetscriptDefinitions.d").NS;
  const ToastVariant: typeof import("./NetscriptDefinitions.d").ToastVariant;
  type ToastVariant = import("./NetscriptDefinitions.d").ToastVariant;
  const CrimeType: typeof import("./NetscriptDefinitions.d").CrimeType;
  type CrimeType = import("./NetscriptDefinitions.d").CrimeType;
  const FactionWorkType: typeof import("./NetscriptDefinitions.d").FactionWorkType;
  type FactionWorkType = import("./NetscriptDefinitions.d").FactionWorkType;
  const UniversityClassType: typeof import("./NetscriptDefinitions.d").UniversityClassType;
  type UniversityClassType = import("./NetscriptDefinitions.d").UniversityClassType;
  const GymType: typeof import("./NetscriptDefinitions.d").GymType;
  type GymType = import("./NetscriptDefinitions.d").GymType;
  const JobName: typeof import("./NetscriptDefinitions.d").JobName;
  type JobName = import("./NetscriptDefinitions.d").JobName;
  const JobField: typeof import("./NetscriptDefinitions.d").JobField;
  type JobField = import("./NetscriptDefinitions.d").JobField;
  type CorpEmployeePosition = import("./NetscriptDefinitions.d").CorpEmployeePosition;
  type CorpIndustryName = import("./NetscriptDefinitions.d").CorpIndustryName;
  type CorpSmartSupplyOption = import("./NetscriptDefinitions.d").CorpSmartSupplyOption;
  const CityName: typeof import("./NetscriptDefinitions.d").CityName;
  type CityName = import("./NetscriptDefinitions.d").CityName;
  const LocationName: typeof import("./NetscriptDefinitions.d").LocationName;
  type LocationName = import("./NetscriptDefinitions.d").LocationName;
  const UniversityLocationName: typeof import("./NetscriptDefinitions.d").UniversityLocationName;
  type UniversityLocationName = import("./NetscriptDefinitions.d").UniversityLocationName;
  const GymLocationName: typeof import("./NetscriptDefinitions.d").GymLocationName;
  type GymLocationName = import("./NetscriptDefinitions.d").GymLocationName;
  const CompanyName: typeof import("./NetscriptDefinitions.d").CompanyName;
  type CompanyName = import("./NetscriptDefinitions.d").CompanyName;
  type NSEnums = import("./NetscriptDefinitions.d").NSEnums;
  type OfficeAPI = import("./NetscriptDefinitions.d").OfficeAPI;
  type WarehouseAPI = import("./NetscriptDefinitions.d").WarehouseAPI;
  const CreatingCorporationCheckResult: typeof import("./NetscriptDefinitions.d").CreatingCorporationCheckResult;
  type CreatingCorporationCheckResult = import("./NetscriptDefinitions.d").CreatingCorporationCheckResult;
  type Corporation = import("./NetscriptDefinitions.d").Corporation;
  type CorpProductData = import("./NetscriptDefinitions.d").CorpProductData;
  type CorpIndustryData = import("./NetscriptDefinitions.d").CorpIndustryData;
  type CorporationInfo = import("./NetscriptDefinitions.d").CorporationInfo;
  type CorpConstants = import("./NetscriptDefinitions.d").CorpConstants;
  type CorpStateName = import("./NetscriptDefinitions.d").CorpStateName;
  type CorpMaterialName = import("./NetscriptDefinitions.d").CorpMaterialName;
  type CorpUnlockName = import("./NetscriptDefinitions.d").CorpUnlockName;
  type CorpUpgradeName = import("./NetscriptDefinitions.d").CorpUpgradeName;
  type CorpResearchName = import("./NetscriptDefinitions.d").CorpResearchName;
  type CorpMaterialConstantData = import("./NetscriptDefinitions.d").CorpMaterialConstantData;
  type IndustryData = import("./NetscriptDefinitions.d").IndustryData;
  type Product = import("./NetscriptDefinitions.d").Product;
  type Material = import("./NetscriptDefinitions.d").Material;
  type Export = import("./NetscriptDefinitions.d").Export;
  type Warehouse = import("./NetscriptDefinitions.d").Warehouse;
  type Office = import("./NetscriptDefinitions.d").Office;
  type Division = import("./NetscriptDefinitions.d").Division;
  type InvestmentOffer = import("./NetscriptDefinitions.d").InvestmentOffer;
  type UserInterfaceTheme = import("./NetscriptDefinitions.d").UserInterfaceTheme;
  type IStyleSettings = import("./NetscriptDefinitions.d").IStyleSettings;
  type GameInfo = import("./NetscriptDefinitions.d").GameInfo;
  type AutocompleteData = import("./NetscriptDefinitions.d").AutocompleteData;
  type MoneyRequirement = import("./NetscriptDefinitions.d").MoneyRequirement;
  type SkillRequirement = import("./NetscriptDefinitions.d").SkillRequirement;
  type KarmaRequirement = import("./NetscriptDefinitions.d").KarmaRequirement;
  type PeopleKilledRequirement = import("./NetscriptDefinitions.d").PeopleKilledRequirement;
  type FileRequirement = import("./NetscriptDefinitions.d").FileRequirement;
  type NumAugmentationsRequirement = import("./NetscriptDefinitions.d").NumAugmentationsRequirement;
  type EmployedByRequirement = import("./NetscriptDefinitions.d").EmployedByRequirement;
  type CompanyReputationRequirement = import("./NetscriptDefinitions.d").CompanyReputationRequirement;
  type JobTitleRequirement = import("./NetscriptDefinitions.d").JobTitleRequirement;
  type CityRequirement = import("./NetscriptDefinitions.d").CityRequirement;
  type LocationRequirement = import("./NetscriptDefinitions.d").LocationRequirement;
  type BackdoorRequirement = import("./NetscriptDefinitions.d").BackdoorRequirement;
  type HacknetRAMRequirement = import("./NetscriptDefinitions.d").HacknetRAMRequirement;
  type HacknetCoresRequirement = import("./NetscriptDefinitions.d").HacknetCoresRequirement;
  type HacknetLevelsRequirement = import("./NetscriptDefinitions.d").HacknetLevelsRequirement;
  type BitNodeRequirement = import("./NetscriptDefinitions.d").BitNodeRequirement;
  type SourceFileRequirement = import("./NetscriptDefinitions.d").SourceFileRequirement;
  type BladeburnerRankRequirement = import("./NetscriptDefinitions.d").BladeburnerRankRequirement;
  type NumInfiltrationsRequirement = import("./NetscriptDefinitions.d").NumInfiltrationsRequirement;
  type NotRequirement = import("./NetscriptDefinitions.d").NotRequirement;
  type SomeRequirement = import("./NetscriptDefinitions.d").SomeRequirement;
  type EveryRequirement = import("./NetscriptDefinitions.d").EveryRequirement;
  type PlayerRequirement = import("./NetscriptDefinitions.d").PlayerRequirement;
}

export { };